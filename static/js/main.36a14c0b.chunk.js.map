{"version":3,"sources":["style.js","icons/circle.svg","Components/Modal.js","Components/InputField.js","Containers/SignUpForm.js","Containers/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["MainContainer","styled","div","ModalContainer","FormContainer","Input","input","LabelInput","p","LabelInputError","ButtonContainer","Button","button","HeaddingDiv","Img","img","ModalHeadder","Modal","props","src","CancelButton","alt","onClick","children","InputField","label","type","onChange","name","onBlur","value","error","SignUpForm","fullName","userName","mobile","email","password","confirmPass","formFilledHandler","passData","dataBase","useState","formErrors","setFormErrors","fullNameError","userNameError","emailIdError","mobileError","newPassError","confirmPassError","fullNameErrorHandle","errors","length","userNameErrorHandle","mobileErrorHandle","emailErrorHandle","passwordErrorHandle","confirmPasswordErrorHandle","errorHandler","e","data","target","xs","check","Object","keys","UserName","eMail","map","emailId","checkEmailErrorHandle","search","includes","checkUserNameAndEmail","axios","post","MainPage","formReset","passReset","passsNew","passConf","formValue","setFormValue","passwordDisplay","updatePasswordDisplay","modalState","setModalState","setDataBase","useEffect","get","then","res","dataBaseArray","entries","catch","err","console","log","ModalHandler","current","slice","repeat","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36a14c0b.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const MainContainer = styled.div`\n  background-color: #282c34;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`\nexport const ModalContainer = styled.div`\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth:100%;\nz-index:1;\nbackdrop-filter: blur(5px);\n`\n\nexport const FormContainer = styled.div`\n  margin: 20px auto;\n  border: solid;\n  z-index:2;\n  padding:8px 16px 24px;\n  border-radius:20px;\n  background-color: white;\n  max-width:300px;\n  @media (min-width: 558px) {\n    max-width:400px;\n    margin-top:80px;\n  }\n`\nexport const Input = styled.input`\n  border:none;\n  border-bottom: 2px solid #282c34;\n  margin:8px 8px 24px;\n  outline:none;\n  width: -webkit-fill-available;\n`\nexport const LabelInput = styled.p`\n  margin:0 0 0 8px;\n  font-weight:500;\n`\nexport const LabelInputError = styled.p`\n  margin:-24px 0 16px 8px;\n  font-weight:500;\n  font-size: 12px;\n  color:red;\n`\n\nexport const ButtonContainer = styled.div`\n  display:flex;\n  align-items:center;\n`\n\nexport const Button = styled.button`\n  margin: 24px auto 0;\n  height:32px;\n  width:144px;\n  border-radius:20px;\n`\n\nexport const HeaddingDiv = styled.p`\n  align-self:flex-start;\n  text-size:21px;\n  font-weight: 500;\n  @media (min-width: 558px) {\n    margin-left:18px;\n  }\n`\n\nexport const Img = styled.img`\n  height:24px;\n  width:24px;\n  margin: auto 4px 18px auto;\n`\nexport const ModalHeadder = styled.div`\n  display:flex;\n  align-items:flex-end;  \n  margin-bottom: 24px;\n`","export default __webpack_public_path__ + \"static/media/circle.19930e56.svg\";","import React from 'react';\r\nimport CancelButton from \"../icons/circle.svg\";\r\nimport { FormContainer, Img, ModalHeadder, HeaddingDiv,ModalContainer} from '../style';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <ModalContainer>\r\n            <FormContainer>\r\n            <ModalHeadder>\r\n              <HeaddingDiv>Please Enter The Following Details</HeaddingDiv>\r\n              <Img src={CancelButton} alt=\"Close Logo\" onClick={props.onClick}/>\r\n            </ModalHeadder>\r\n            {props.children}\r\n          </FormContainer>\r\n        </ModalContainer>\r\n    )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport {Input,LabelInput, LabelInputError} from '../style'\r\n\r\nconst InputField = (props) => {\r\n    return(\r\n        <label>\r\n            <LabelInput>{props.label}</LabelInput>\r\n            <Input  type='text' onChange={props.onChange} name={props.name} onBlur={props.onBlur} value={props.value}/>\r\n            <LabelInputError>{props.error}</LabelInputError>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default InputField;","import React, {Fragment, useState} from \"react\";\r\nimport { Container, Row, Col } from \"react-grid-system\";\r\nimport InputField from '../Components/InputField';\r\nimport {Button, ButtonContainer} from '../style';\r\nimport axios from 'axios'\r\n\r\nconst SignUpForm = (props) => {\r\n    const {\r\n        fullName,\r\n        userName,\r\n        mobile,\r\n        email,\r\n        password,\r\n        confirmPass,\r\n        onChange,\r\n        formFilledHandler,\r\n        passData,\r\n        dataBase\r\n    } = props\r\n\r\n    const [formErrors, setFormErrors] = useState({})\r\n    let {\r\n    fullNameError,\r\n    userNameError,\r\n    emailIdError,\r\n    mobileError,\r\n    newPassError,\r\n    confirmPassError\r\n    } = formErrors\r\n\r\n    const fullNameErrorHandle = (value, errors) => {\r\n    !value.length\r\n        ? (() => {errors.fullNameError = 'Please enter name'})()\r\n        : delete errors.fullNameError\r\n    }\r\n    const userNameErrorHandle = (value, errors) => {\r\n    !value.length\r\n        ? (() => {errors.userNameError = 'User Name Taken'})()\r\n        : delete errors.userNameError\r\n    }\r\n    const mobileErrorHandle = (value, errors) => {\r\n    !value.length\r\n        ? (() => {errors.mobileError = 'Please Enter Detail'})()\r\n        : delete errors.mobileError\r\n        }\r\n    const emailErrorHandle = (value, errors) => {\r\n    !value.length\r\n        ? (() => {errors.emailIdError = 'Please Enter Detail'})()\r\n        : delete errors.emailIdError\r\n    }\r\n    const passwordErrorHandle = (value, errors) => {\r\n    !value.length\r\n        ? (() => {errors.newPassError = 'Please Enter Detail'})()\r\n        : delete errors.newPassError\r\n    }\r\n    const confirmPasswordErrorHandle = (value, errors) => {\r\n    !value.length\r\n        ? (() => {errors.confirmPassError = 'Please Enter Detail'})()\r\n        : delete errors.confirmPassError\r\n    }\r\n    const checkPasswordErrorHandle = (value, errors) => {\r\n    value.length \r\n        ? (() => {errors.confirmPassError = 'Password Does Not Match'})()\r\n        : delete errors.confirmPassError\r\n    }\r\n    const checkUserNameErrorHandle = (value, errors) => {\r\n    value.length \r\n            ? (() => {errors.userNameError = 'Username Exists!'})()\r\n            : delete errors.userNameError\r\n        }\r\n    const checkEmailSynatxErrorHandle = (value, errors) => {\r\n    value.length \r\n        ? (() => {errors.emailIdError = 'Enter Valid Email ID!'})()\r\n        : delete errors.emailIdError\r\n    }\r\n    const checkEmailErrorHandle = (value, errors) => {\r\n    value.length \r\n        ? (() => {errors.emailIdError = 'EmailID Exists!'})()\r\n        : delete errors.emailIdError\r\n    }\r\n\r\n    const errorHandler = (e) => {\r\n    const data = e.target.name\r\n    const errors = {...formErrors}\r\n    switch (data){\r\n        case 'name' : {\r\n        fullNameErrorHandle(fullName, errors)\r\n        break\r\n        }\r\n        case 'user' :{\r\n        userNameErrorHandle(userName,errors)\r\n        break\r\n        }\r\n        case 'mobileNo' :{\r\n        mobileErrorHandle(mobile, errors)\r\n        break\r\n        }\r\n        case 'emailId' :{\r\n        emailErrorHandle(email, errors)\r\n        break\r\n        }\r\n        case 'passNew' :{\r\n        passwordErrorHandle(password, errors)\r\n        break\r\n        }\r\n        case 'passConfirm' :{\r\n        confirmPasswordErrorHandle(confirmPass, errors)\r\n        break\r\n        }\r\n        default :\r\n        return null\r\n    }\r\n    setFormErrors(errors)\r\n    }\r\n\r\n    const validateError = () => {\r\n        fullNameErrorHandle(fullName,formErrors)\r\n        userNameErrorHandle(userName, formErrors)\r\n        mobileErrorHandle(mobile, formErrors)\r\n        emailErrorHandle(email, formErrors)\r\n        passwordErrorHandle(password, formErrors)\r\n        confirmPasswordErrorHandle(confirmPass, formErrors)\r\n        setFormErrors({...formErrors})\r\n        return !Object.keys(formErrors).length\r\n    }\r\n\r\n    const checkUserNameAndEmail = ( UserName, eMail) => {\r\n        dataBase.map((data) => {\r\n            if (data.userName === UserName) {\r\n                checkUserNameErrorHandle(UserName, formErrors)\r\n            }\r\n            if (data.emailId === eMail) {\r\n                checkEmailErrorHandle(email, formErrors)\r\n            }\r\n            setFormErrors({...formErrors})\r\n            return(!Object.keys(formErrors).length)\r\n        })\r\n        if ((eMail.search(\"@\") <= 0) || !(eMail.includes('.com') || eMail.includes('.in'))) {\r\n            checkEmailSynatxErrorHandle(email, formErrors)\r\n        }\r\n        setFormErrors({...formErrors})\r\n        return(!Object.keys(formErrors).length)\r\n    }\r\n\r\n    const updateDataHandler = () =>{\r\n        const validate = validateError()\r\n        let check = false\r\n        if (validate){\r\n             if (passData.password !== passData.confirmPass){\r\n                checkPasswordErrorHandle(confirmPass, formErrors)\r\n                setFormErrors({...formErrors})\r\n            } \r\n            check = checkUserNameAndEmail(userName, email)\r\n        }\r\n        if (check) {\r\n            axios.post(`https://my-project-database-c4a55-default-rtdb.firebaseio.com/.json`,passData)\r\n            formFilledHandler()\r\n        }\r\n    }\r\n    return(\r\n        <Fragment>\r\n            <Container>\r\n                <Row>\r\n                  <Col xs={6}>\r\n                    <InputField \r\n                      label='Full Name' \r\n                      name='name' \r\n                      value={fullName}\r\n                      error= {fullNameError}\r\n                      onChange={onChange}\r\n                      onBlur = {errorHandler}/>\r\n                  </Col>\r\n                  <Col xs={6}>\r\n                    <InputField \r\n                      label='User Name' \r\n                      name='user' \r\n                      value={userName}\r\n                      error= {userNameError}\r\n                      onChange={onChange}\r\n                      onBlur = {errorHandler}/>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                      <InputField \r\n                        label='Mobile Number' \r\n                        name='mobileNo' \r\n                        value={mobile}\r\n                        error= {mobileError}\r\n                        onChange={onChange}\r\n                        onBlur = {errorHandler}/>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                      <InputField \r\n                        label='Email-ID' \r\n                        name='emailId' \r\n                        value={email}\r\n                        error= {emailIdError}\r\n                        onChange={onChange}\r\n                        onBlur = {errorHandler}/>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                      <InputField \r\n                        label='Create Password' \r\n                        name='passNew'\r\n                        value={password}\r\n                        error= {newPassError} \r\n                        onChange={onChange}\r\n                        onBlur = {errorHandler}/>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                      <InputField \r\n                        label='Confirm Password' \r\n                        name='passConfirm' \r\n                        value={confirmPass}\r\n                        error= {confirmPassError}\r\n                        onChange={onChange}\r\n                        onBlur = {errorHandler}/>\r\n                  </Col>\r\n                </Row>\r\n            </Container>\r\n            <ButtonContainer>\r\n                    <Button onClick={updateDataHandler}>Sign Me UP !</Button>\r\n            </ButtonContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SignUpForm","import React, { useState, useEffect} from \"react\";\r\nimport {MainContainer, Button, ButtonContainer} from '../style';\r\nimport Modal from \"../Components/Modal\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport axios from 'axios'\r\n\r\nconst MainPage = () => {\r\n    \r\n    const formReset = {\r\n        fullName : '',\r\n        userName : '',\r\n        mobile : '',\r\n        emailId : '',\r\n        password : '',\r\n        confirmPass : ''\r\n    }\r\n    const passReset = {\r\n        passsNew :'',\r\n        passConf : ''\r\n    }\r\n    const [formValue, setFormValue] = useState(formReset)\r\n    const [passwordDisplay, updatePasswordDisplay] = useState(passReset)\r\n    const [modalState, setModalState] = useState(false)\r\n    const [dataBase, setDataBase] = useState(null)\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://my-project-database-c4a55-default-rtdb.firebaseio.com/.json`)\r\n            .then(res => {\r\n                if (!dataBase) {\r\n                    const dataBaseArray = Object.entries(res.data).map((e) => { return (e[1])})\r\n                    setDataBase(dataBaseArray)\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    },[dataBase])\r\n\r\n    const inputHandler = (e) => {\r\n        const data = e.target.value\r\n        switch (e.target.name) {\r\n            case 'name':{\r\n            setFormValue({...formValue, fullName: data})\r\n            break\r\n            }\r\n            case 'user':{\r\n            setFormValue({...formValue, userName: data})\r\n            break\r\n            }\r\n            case 'mobileNo':{\r\n            if (data.length <= 10) {\r\n                setFormValue({...formValue, mobile: data })\r\n            }\r\n            break\r\n            }\r\n            case 'emailId':{\r\n            setFormValue({...formValue, emailId: data })\r\n            break\r\n            }\r\n            case 'passNew':{\r\n            if (data.slice(-1) === '*' || data.slice(-1) === '') {\r\n                setFormValue({...formValue, password: formValue.password.slice(0, data.length) })\r\n            }\r\n            else {\r\n                setFormValue({...formValue, password: formValue.password + data.slice(-1) })\r\n            }\r\n            updatePasswordDisplay({...passwordDisplay, passsNew:'*'.repeat(data.length)})\r\n            break\r\n            }\r\n            case 'passConfirm':{\r\n            if (data.slice(-1) === '*' || data.slice(-1) === '') {\r\n                setFormValue({...formValue, confirmPass: formValue.confirmPass.slice(0, data.length) })\r\n            }\r\n            else {\r\n                setFormValue({...formValue, confirmPass: formValue.confirmPass + data.slice(-1) })\r\n            }\r\n            updatePasswordDisplay({...passwordDisplay, passConf:'*'.repeat(data.length)})\r\n            break\r\n            }\r\n            default:\r\n            return null\r\n        }\r\n    }\r\n\r\n    const formFilledHandler = () => {\r\n        setFormValue(formReset)\r\n        updatePasswordDisplay(passReset)\r\n    }\r\n    \r\n    const ModalHandler = () => {\r\n        setModalState((current) => !current)\r\n      }\r\n\r\n    return(\r\n        <MainContainer>\r\n            <ButtonContainer>\r\n                <Button onClick={ModalHandler}>Sign-Up</Button>\r\n                <Button>Login</Button>\r\n            </ButtonContainer>\r\n            {modalState &&\r\n            <Modal onClick={ModalHandler}>\r\n                <SignUpForm \r\n                formFilledHandler ={formFilledHandler}\r\n                onChange={inputHandler} \r\n                fullName = {formValue.fullName}\r\n                userName = {formValue.userName}\r\n                mobile = {formValue.mobile}\r\n                email = {formValue.emailId}\r\n                password = {passwordDisplay.passsNew}\r\n                confirmPass = {passwordDisplay.passConf}\r\n                passData = {formValue}\r\n                dataBase = {dataBase} />\r\n            </Modal>}\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\nexport default MainPage","import React, { Fragment } from 'react';\nimport MainPage from \"./Containers/MainPage\";\n\nconst App = () => {\n\n  return (\n    <Fragment>\n      <MainPage />\n    </Fragment>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}